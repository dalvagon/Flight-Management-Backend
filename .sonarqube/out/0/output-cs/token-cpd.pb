ó
UC:\Users\leahu\Desktop\FlightManagement\FlightManagement.Business\Entities\Address.cs
	namespace 	
FlightManagement
 
. 
Domain !
.! "
Entities" *
{ 
public 

class 
Address 
{ 
public 
Guid 
Id 
{ 
get 
; 
private %
set& )
;) *
}+ ,
public 
string 
Number 
{ 
get "
;" #
private$ +
set, /
;/ 0
}1 2
public 
string 
Street 
{ 
get "
;" #
private$ +
set, /
;/ 0
}1 2
public 
string 
City 
{ 
get  
;  !
private" )
set* -
;- .
}/ 0
public		 
string		 
Country		 
{		 
get		  #
;		# $
private		% ,
set		- 0
;		0 1
}		2 3
public 
Address 
( 
string 
number $
,$ %
string& ,
street- 3
,3 4
string5 ;
city< @
,@ A
stringB H
countryI P
)P Q
{ 	
Id 
= 
Guid 
. 
NewGuid 
( 
) 
;  
Number 
= 
number 
; 
Street 
= 
street 
; 
City 
= 
city 
; 
Country 
= 
country 
; 
} 	
} 
} þ
[C:\Users\leahu\Desktop\FlightManagement\FlightManagement.Business\Entities\Administrator.cs
	namespace 	
FlightManagement
 
. 
Domain !
.! "
Entities" *
{ 
public 

class 
Administrator 
{ 
public 
Guid 
Id 
{ 
get 
; 
private %
set& )
;) *
}+ ,
public 
Company 
Company 
{  
get! $
;$ %
private& -
set. 1
;1 2
}3 4
public		 
Person		 
Person		 
{		 
get		 "
;		" #
private		$ +
set		, /
;		/ 0
}		1 2
public 
static 
Result 
< 
Administrator *
>* +
Create, 2
(2 3
Company3 :
company; B
,B C
PersonD J
personK Q
)Q R
{ 	
return 
Result 
< 
Administrator '
>' (
.( )
Success) 0
(0 1
new 
Administrator !
{ 
Id 
= 
Guid 
. 
NewGuid %
(% &
)& '
,' (
Company 
= 
company %
,% &
Person 
= 
person #
} 
) 
; 
} 	
} 
} ü
UC:\Users\leahu\Desktop\FlightManagement\FlightManagement.Business\Entities\Airport.cs
	namespace 	
FlightManagement
 
. 
Domain !
.! "
Entities" *
{ 
public 

class 
Airport 
{ 
public 
Guid 
Id 
{ 
get 
; 
private %
set& )
;) *
}+ ,
public 
string 
Name 
{ 
get  
;  !
private" )
set* -
;- .
}/ 0
public		 
Address		 
Address		 
{		  
get		! $
;		$ %
private		& -
set		. 1
;		1 2
}		3 4
public

 
string

 
City

 
{

 
get

  
;

  !
private

" )
set

* -
;

- .
}

/ 0
public 
static 
Result 
< 
Airport $
>$ %
Create& ,
(, -
string- 3
name4 8
,8 9
Address: A
addressB I
,I J
stringK Q
cityR V
)V W
{ 	
return 
Result 
< 
Airport !
>! "
." #
Success# *
(* +
new 
Airport 
{ 
Id 
= 
Guid 
. 
NewGuid %
(% &
)& '
,' (
Name 
= 
name 
,  
Address 
= 
address %
,% &
City 
= 
city 
} 
) 
; 
} 	
} 
} ë
UC:\Users\leahu\Desktop\FlightManagement\FlightManagement.Business\Entities\Allergy.cs
	namespace 	
FlightManagement
 
. 
Domain !
.! "
Entities" *
{ 
public 

class 
Allergy 
{ 
public 
Guid 
Id 
{ 
get 
; 
private %
set& )
;) *
}+ ,
public 
string 
Name 
{ 
get  
;  !
private" )
set* -
;- .
}/ 0
public 
Allergy 
( 
string 
name "
)" #
{		 	
Id

 
=

 
Guid

 
.

 
NewGuid

 
(

 
)

 
;

  
Name 
= 
name 
; 
} 	
} 
} ª
UC:\Users\leahu\Desktop\FlightManagement\FlightManagement.Business\Entities\Baggage.cs
	namespace 	
FlightManagement
 
. 
Domain !
.! "
Entities" *
{ 
public 

class 
Baggage 
{ 
public 
Guid 
Id 
{ 
get 
; 
private %
set& )
;) *
}+ ,
public 
	Passenger 
	Passenger "
{# $
get% (
;( )
private* 1
set2 5
;5 6
}7 8
public 
double 
Weight 
{ 
get "
;" #
private$ +
set, /
;/ 0
}1 2
public 
double 
Width 
{ 
get !
;! "
private# *
set+ .
;. /
}0 1
public		 
double		 
Height		 
{		 
get		 "
;		" #
private		$ +
set		, /
;		/ 0
}		1 2
public

 
double

 
Length

 
{

 
get

 "
;

" #
private

$ +
set

, /
;

/ 0
}

1 2
public 
Baggage 
( 
double 
weight $
,$ %
double& ,
width- 2
,2 3
double4 :
height; A
,A B
doubleC I
lengthJ P
)P Q
{ 	
Id 
= 
Guid 
. 
NewGuid 
( 
) 
;  
Weight 
= 
weight 
; 
Width 
= 
width 
; 
Height 
= 
height 
; 
Length 
= 
length 
; 
} 	
public 
void $
AttachBaggageToPassenger ,
(, -
	Passenger- 6
	passenger7 @
)@ A
{ 	
	Passenger 
= 
	passenger !
;! "
} 	
} 
} ¡
UC:\Users\leahu\Desktop\FlightManagement\FlightManagement.Business\Entities\Company.cs
	namespace 	
FlightManagement
 
. 
Domain !
.! "
Entities" *
{ 
public 

class 
Company 
{ 
public 
Guid 
Id 
{ 
get 
; 
private %
set& )
;) *
}+ ,
public 
string 
Name 
{ 
get  
;  !
private" )
set* -
;- .
}/ 0
public 
DateTime 
CreationDate $
{% &
get' *
;* +
private, 3
set4 7
;7 8
}9 :
public 
List 
< 
Administrator !
>! "
Administrators# 1
{2 3
get4 7
;7 8
private9 @
setA D
;D E
}F G
public

 
Company

 
(

 
string

 
name

 "
,

" #
DateTime

$ ,
creationDate

- 9
)

9 :
{ 	
Id 
= 
Guid 
. 
NewGuid 
( 
) 
;  
Name 
= 
name 
; 
CreationDate 
= 
creationDate '
;' (
} 	
} 
} õX
TC:\Users\leahu\Desktop\FlightManagement\FlightManagement.Business\Entities\Flight.cs
	namespace 	
FlightManagement
 
. 
Domain !
.! "
Entities" *
{ 
public 

class 
Flight 
{ 
public 
Guid 
Id 
{ 
get 
; 
private %
set& )
;) *
}+ ,
public 
DateTime 
DepartureDate %
{& '
get( +
;+ ,
private- 4
set5 8
;8 9
}: ;
public		 
DateTime		 
ArrivalDate		 #
{		$ %
get		& )
;		) *
private		+ 2
set		3 6
;		6 7
}		8 9
public

 
int

 
PassengerCapacity

 $
{

% &
get

' *
;

* +
private

, 3
set

4 7
;

7 8
}

9 :
public 
double !
BaggageWeightCapacity +
{, -
get. 1
;1 2
private3 :
set; >
;> ?
}@ A
public 
double 
MaxWeightPerBaggage )
{* +
get, /
;/ 0
private1 8
set9 <
;< =
}> ?
public 
double (
MaxBaggageWeightPerPassenger 2
{3 4
get5 8
;8 9
private: A
setB E
;E F
}G H
public 
double 
MaxBaggageWidth %
{& '
get( +
;+ ,
private- 4
set5 8
;8 9
}: ;
public 
double 
MaxBaggageHeight &
{' (
get) ,
;, -
private. 5
set6 9
;9 :
}; <
public 
double 
MaxBaggageLength &
{' (
get) ,
;, -
private. 5
set6 9
;9 :
}; <
public 
List 
< 
	Passenger 
> 

Passengers )
{* +
get, /
;/ 0
private1 8
set9 <
;< =
}> ?
=@ A
newB E
(E F
)F G
;G H
public 
Airport 
DepartureAirport '
{( )
get* -
;- .
private/ 6
set7 :
;: ;
}< =
public 
Airport 
DestinationAirport )
{* +
get, /
;/ 0
private1 8
set9 <
;< =
}> ?
public 
List 
< 
Airport 
> 
IntermediateStops .
{/ 0
get1 4
;4 5
private6 =
set> A
;A B
}C D
=E F
newG J
(J K
)K L
;L M
public 
static 
Result 
< 
Flight #
># $
Create% +
(+ ,
DateTime 
departureDate "
," #
DateTime 
arrivalDate  
,  !
int 
passengerCapacity !
,! "
double !
baggageWeightCapacity (
,( )
double 
maxWeightPerBaggage &
,& '
double (
maxBaggageWeightPerPassenger /
,/ 0
double 
maxBaggageWidth "
," #
double 
maxBaggageHeight #
,# $
double 
maxBaggageLength #
,# $
Airport   
departureAirport   $
,  $ %
Airport!! 
destinationAirport!! &
)"" 	
{## 	
if$$ 
($$ 
arrivalDate$$ 
.$$ 
	CompareTo$$ %
($$% &
departureDate$$& 3
)$$3 4
<$$5 6
$num$$7 8
)$$8 9
{%% 
return&& 
Result&& 
<&& 
Flight&& $
>&&$ %
.&&% &
Failure&&& -
(&&- .
$"'' 
$str'' '
{''' (
arrivalDate''( 3
}''3 4
$str''4 _
{''_ `
departureDate''` m
}''m n
"''n o
)''o p
;''p q
}(( 
if** 
(** !
baggageWeightCapacity** %
/**& '
passengerCapacity**( 9
<**: ;(
maxBaggageWeightPerPassenger**< X
)**X Y
{++ 
return,, 
Result,, 
<,, 
Flight,, $
>,,$ %
.,,% &
Failure,,& -
(,,- .
$"-- 
$str-- @
{--@ A(
maxBaggageWeightPerPassenger--A ]
}--] ^
$str	--^ 
{
-- #
baggageWeightCapacity
-- ¦
}
--¦ §
$str
--§ Ö
{
--Ö ×
passengerCapacity
--× è
}
--è é
$str
--é ê
"
--ê ë
)
--ë ì
;
--ì í
}.. 
return00 
Result00 
<00 
Flight00  
>00  !
.00! "
Success00" )
(00) *
new11 
Flight11 
{22 
Id33 
=33 
Guid33 
.33 
NewGuid33 %
(33% &
)33& '
,33' (
DepartureDate44 !
=44" #
departureDate44$ 1
,441 2
ArrivalDate55 
=55  !
arrivalDate55" -
,55- .
PassengerCapacity66 %
=66& '
passengerCapacity66( 9
,669 :!
BaggageWeightCapacity77 )
=77* +!
baggageWeightCapacity77, A
,77A B
MaxWeightPerBaggage88 '
=88( )
maxWeightPerBaggage88* =
,88= >(
MaxBaggageWeightPerPassenger99 0
=991 2(
maxBaggageWeightPerPassenger993 O
,99O P
MaxBaggageWidth:: #
=::$ %
maxBaggageWidth::& 5
,::5 6
MaxBaggageHeight;; $
=;;% &
maxBaggageHeight;;' 7
,;;7 8
MaxBaggageLength<< $
=<<% &
maxBaggageLength<<' 7
,<<7 8
DepartureAirport== $
===% &
departureAirport==' 7
,==7 8
DestinationAirport>> &
=>>' (
destinationAirport>>) ;
}?? 
)@@ 
;@@ 
}AA 	
publicCC 
ResultCC 
<CC 
	PassengerCC 
>CC  #
AttachPassengerToFlightCC! 8
(CC8 9
	PassengerCC9 B
	passengerCCC L
)CCL M
{DD 	
varEE 
peopleEE 
=EE 

PassengersEE #
.EE# $
SelectEE$ *
(EE* +
pEE+ ,
=>EE- /
pEE0 1
.EE1 2
PersonEE2 8
)EE8 9
;EE9 :
ifGG 
(GG 

PassengersGG 
.GG 
CountGG  
==GG! #
PassengerCapacityGG$ 5
)GG5 6
{HH 
returnII 
ResultII 
<II 
	PassengerII '
>II' (
.II( )
FailureII) 0
(II0 1
$"II1 3
$strII3 a
{IIa b
IdIIb d
}IId e
"IIe f
)IIf g
;IIg h
}JJ 
ifLL 
(LL 
peopleLL 
.LL 
ContainsLL 
(LL  
	passengerLL  )
.LL) *
PersonLL* 0
)LL0 1
)LL1 2
{MM 
returnNN 
ResultNN 
<NN 
	PassengerNN '
>NN' (
.NN( )
FailureNN) 0
(NN0 1
$"OO 
$strOO %
{OO% &
	passengerOO& /
.OO/ 0
PersonOO0 6
.OO6 7
IdOO7 9
}OO9 :
$strOO: d
{OOd e
IdOOe g
}OOg h
"OOh i
)PP 
;PP 
}QQ 
ifSS 
(SS 
	passengerSS 
.SS 
GetBaggageWeightSS *
(SS* +
)SS+ ,
>SS- .(
MaxBaggageWeightPerPassengerSS/ K
)SSK L
{TT 
returnUU 
ResultUU 
<UU 
	PassengerUU '
>UU' (
.UU( )
FailureUU) 0
(UU0 1
$"VV 
$strVV %
{VV% &
	passengerVV& /
.VV/ 0
PersonVV0 6
.VV6 7
IdVV7 9
}VV9 :
$strVV: Z
{VVZ [(
MaxBaggageWeightPerPassengerVV[ w
}VVw x
"VVx y
)WW 
;WW 
}XX 
foreachZZ 
(ZZ 
varZZ 
baggageZZ  
inZZ! #
	passengerZZ$ -
.ZZ- .
BaggagesZZ. 6
)ZZ6 7
{[[ 
if\\ 
(\\ 
baggage\\ 
.\\ 
Weight\\ "
>\\# $
MaxWeightPerBaggage\\% 8
)\\8 9
{]] 
return^^ 
Result^^ !
<^^! "
	Passenger^^" +
>^^+ ,
.^^, -
Failure^^- 4
(^^4 5
$"__ 
$str__ )
{__) *
	passenger__* 3
.__3 4
Person__4 :
.__: ;
Id__; =
}__= >
$str__> t
{__t u 
MaxWeightPerBaggage	__u 
}
__ 
"
__ 
)
__ 
;
__ 
}`` 
ifbb 
(bb 
baggagecc 
.cc 
Widthcc !
>cc" #
MaxBaggageWidthcc$ 3
||dd 
baggagedd 
.dd 
Heightdd %
>dd& '
MaxBaggageHeightdd( 8
||ee 
baggageee 
.ee 
Lengthee %
>ee& '
MaxBaggageLengthee( 8
)ff 
{gg 
returnhh 
Resulthh !
<hh! "
	Passengerhh" +
>hh+ ,
.hh, -
Failurehh- 4
(hh4 5
$"ii 
$strii )
{ii) *
	passengerii* 3
.ii3 4
Personii4 :
.ii: ;
Idii; =
}ii= >
$strii> x
{iix y
MaxBaggageWidth	iiy 
}
ii 
$str
ii 
{
ii 
MaxBaggageHeight
ii 
}
ii 
$str
ii ¡
{
ii¡ ¢
MaxBaggageLength
ii¢ ²
}
ii² ³
"
ii³ ´
)jj 
;jj 
}kk 
}ll 
	passengernn 
.nn 
Baggagesnn 
.nn 
ForEachnn &
(nn& '
baggagenn' .
=>nn/ 1
baggagenn2 9
.nn9 :$
AttachBaggageToPassengernn: R
(nnR S
	passengernnS \
)nn\ ]
)nn] ^
;nn^ _

Passengersoo 
.oo 
Addoo 
(oo 
	passengeroo $
)oo$ %
;oo% &
returnpp 
Resultpp 
<pp 
	Passengerpp #
>pp# $
.pp$ %
Successpp% ,
(pp, -
	passengerpp- 6
)pp6 7
;pp7 8
}qq 	
}rr 
}ss º
TC:\Users\leahu\Desktop\FlightManagement\FlightManagement.Business\Entities\Gender.cs
	namespace 	
FlightManagement
 
. 
Domain !
.! "
Entities" *
{ 
public 

enum 
Gender 
{ 
Male 
= 
$num 
, 
Female 
= 
$num 
} 
} ¶!
WC:\Users\leahu\Desktop\FlightManagement\FlightManagement.Business\Entities\Passenger.cs
	namespace 	
FlightManagement
 
. 
Domain !
.! "
Entities" *
{ 
public 

class 
	Passenger 
{ 
public 
Guid 
Id 
{ 
get 
; 
private %
set& )
;) *
}+ ,
public 
Person 
Person 
{ 
get "
;" #
private$ +
set, /
;/ 0
}1 2
public		 
Flight		 
Flight		 
{		 
get		 "
;		" #
private		$ +
set		, /
;		/ 0
}		1 2
public

 
double

 
Weight

 
{

 
get

 "
;

" #
private

$ +
set

, /
;

/ 0
}

1 2
public 
List 
< 
Allergy 
> 
	Allergies &
{' (
get) ,
;, -
private. 5
set6 9
;9 :
}; <
== >
new? B
(B C
)C D
;D E
public 
List 
< 
Baggage 
> 
Baggages %
{& '
get( +
;+ ,
private- 4
set5 8
;8 9
}: ;
=< =
new> A
(A B
)B C
;C D
public 
static 
Result 
< 
	Passenger &
>& '
Create( .
(. /
Person/ 5
person6 <
,< =
Flight> D
flightE K
,K L
doubleM S
weightT Z
,Z [
List\ `
<` a
Baggagea h
>h i
baggagesj r
,r s
List 
< 
Allergy 
> 
	allergies #
)# $
{ 	
var 
	passenger 
= 
new 
	Passenger  )
{ 
Id 
= 
Guid 
. 
NewGuid !
(! "
)" #
,# $
Person 
= 
person 
,  
Flight 
= 
flight 
,  
Weight 
= 
weight 
,  
Baggages 
= 
baggages #
,# $
	Allergies 
= 
	allergies %
,% &
} 
; 
return 
flight 
. #
AttachPassengerToFlight 1
(1 2
	passenger2 ;
); <
;< =
} 	
public 
void 
AttachBaggages "
(" #
List# '
<' (
Baggage( /
>/ 0
baggages1 9
)9 :
{ 	
Baggages   
.   
AddRange   
(   
baggages   &
)  & '
;  ' (
}!! 	
public## 
void## 
AttachAllergy## !
(##! "
Allergy##" )
allergy##* 1
)##1 2
{$$ 	
	Allergies%% 
.%% 
Add%% 
(%% 
allergy%% !
)%%! "
;%%" #
}&& 	
public(( 
double(( 
GetBaggageWeight(( &
(((& '
)((' (
{)) 	
if** 
(** 
!** 
Baggages** 
.** 
Any** 
(** 
)** 
)**  
return++ 
$num++ 
;++ 
return-- 
Baggages-- 
.-- 
Select-- "
(--" #
baggage--# *
=>--+ -
baggage--. 5
.--5 6
Weight--6 <
)--< =
.--= >
ToList--> D
(--D E
)--E F
.--F G
Sum--G J
(--J K
)--K L
;--L M
}.. 	
}// 
}00 Ì
TC:\Users\leahu\Desktop\FlightManagement\FlightManagement.Business\Entities\Person.cs
	namespace 	
FlightManagement
 
. 
Domain !
.! "
Entities" *
{ 
public 

class 
Person 
{ 
public 
Guid 
Id 
{ 
get 
; 
private %
set& )
;) *
}+ ,
public 
string 
Name 
{ 
get  
;  !
private" )
set* -
;- .
}/ 0
public		 
string		 
Surname		 
{		 
get		  #
;		# $
private		% ,
set		- 0
;		0 1
}		2 3
public

 
DateTime

 
DateOfBirth

 #
{

$ %
get

& )
;

) *
private

+ 2
set

3 6
;

6 7
}

8 9
public 
Gender 
Gender 
{ 
get "
;" #
private$ +
set, /
;/ 0
}1 2
public 
Address 
Address 
{  
get! $
;$ %
private& -
set. 1
;1 2
}3 4
public 
static 
Result 
< 
Person #
># $
Create% +
(+ ,
string 
name 
, 
string 
surname 
, 
DateTime 
dateOfBirth  
,  !
string 
gender 
, 
Address 
address 
) 	
{ 	
if 
( 
! 
Enum 
. 
TryParse 
< 
Gender %
>% &
(& '
gender' -
,- .
out/ 2
var3 6
personGender7 C
)C D
)D E
{ 
var  
expectedGenderValues (
=) *
Enum+ /
./ 0
GetNames0 8
(8 9
typeof9 ?
(? @
Gender@ F
)F G
)G H
;H I
var $
textExpectedGenderValues ,
=- .
string/ 5
.5 6
Join6 :
(: ;
$str; ?
,? @ 
expectedGenderValuesA U
)U V
;V W
return 
Result 
< 
Person $
>$ %
.% &
Failure& -
(- .
$" 
$str *
{* +
gender+ 1
}1 2
$str2 O
{O P$
textExpectedGenderValuesP h
}h i
"i j
) 
; 
} 
var   
person   
=   
new   
Person   #
{!! 
Id"" 
="" 
Guid"" 
."" 
NewGuid"" !
(""! "
)""" #
,""# $
Name## 
=## 
name## 
,## 
Surname$$ 
=$$ 
surname$$ !
,$$! "
DateOfBirth%% 
=%% 
dateOfBirth%% )
,%%) *
Gender&& 
=&& 
personGender&& %
,&&% &
Address'' 
='' 
address'' !
}(( 
;(( 
return** 
Result** 
<** 
Person**  
>**  !
.**! "
Success**" )
(**) *
person*** 0
)**0 1
;**1 2
}++ 	
},, 
}-- 
SC:\Users\leahu\Desktop\FlightManagement\FlightManagement.Business\Helpers\Result.cs
	namespace 	
FlightManagement
 
. 
DOmain !
.! "
Helpers" )
{ 
public 

class 
Result 
{ 
public 
string 
Error 
{ 
get !
;! "
private# *
set+ .
;. /
}0 1
public 
bool 
	IsSuccess 
{ 
get  #
;# $
private% ,
set- 0
;0 1
}2 3
public 
bool 
	IsFailure 
{ 
get  #
;# $
private% ,
set- 0
;0 1
}2 3
public		 
static		 
Result		 
Success		 $
(		$ %
)		% &
{

 	
return 
new 
Result 
{ 
	IsSuccess  )
=* +
true, 0
}1 2
;2 3
} 	
public 
static 
Result 
Failure $
($ %
string% +
error, 1
)1 2
{ 	
return 
new 
Result 
{ 
Error  %
=& '
error( -
,- .
	IsFailure/ 8
=9 :
true; ?
}@ A
;A B
} 	
} 
} ¢
[C:\Users\leahu\Desktop\FlightManagement\FlightManagement.Business\Helpers\ResultOfEntity.cs
	namespace 	
FlightManagement
 
. 
Domain !
.! "
Helpers" )
{ 
public 

class 
Result 
< 
TEntity 
>  
{ 
public 
TEntity 
Entity 
{ 
get  #
;# $
set% (
;( )
}* +
public 
string 
Error 
{ 
get !
;! "
private# *
set+ .
;. /
}0 1
public 
bool 
	IsSuccess 
{ 
get  #
;# $
private% ,
set- 0
;0 1
}2 3
public 
bool 
	IsFailure 
{ 
get  #
;# $
private% ,
set- 0
;0 1
}2 3
public

 
static

 
Result

 
<

 
TEntity

 $
>

$ %
Success

& -
(

- .
TEntity

. 5
entity

6 <
)

< =
{ 	
return 
new 
Result 
< 
TEntity %
>% &
{' (
Entity) /
=0 1
entity2 8
,8 9
	IsSuccess: C
=D E
trueF J
}K L
;L M
} 	
public 
static 
Result 
< 
TEntity $
>$ %
Failure& -
(- .
string. 4
error5 :
): ;
{ 	
return 
new 
Result 
< 
TEntity %
>% &
{' (
Error) .
=/ 0
error1 6
,6 7
	IsFailure8 A
=B C
trueD H
}I J
;J K
} 	
} 
} 
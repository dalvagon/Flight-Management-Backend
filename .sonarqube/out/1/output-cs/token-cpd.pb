î
ZC:\Users\leahu\Desktop\FlightManagement\FlightManagement.Infrastructure\DatabaseContext.cs
	namespace 	
FlightManagement
 
. 
Infrastructure )
{ 
public 

class 
DatabaseContext  
:! "
	DbContext# ,
{ 
public 
DbSet 
< 
Address 
> 
	Addresses '
{( )
get* -
;- .
private/ 6
set7 :
;: ;
}< =
public		 
DbSet		 
<		 
Administrator		 "
>		" #
Administrators		$ 2
{		3 4
get		5 8
;		8 9
private		: A
set		B E
;		E F
}		G H
public

 
DbSet

 
<

 
Airport

 
>

 
Airports

 &
{

' (
get

) ,
;

, -
private

. 5
set

6 9
;

9 :
}

; <
public 
DbSet 
< 
Allergy 
> 
	Allergies '
{( )
get* -
;- .
private/ 6
set7 :
;: ;
}< =
public 
DbSet 
< 
Baggage 
> 
Baggages &
{' (
get) ,
;, -
private. 5
set6 9
;9 :
}; <
public 
DbSet 
< 
Company 
> 
	Companies '
{( )
get* -
;- .
private/ 6
set7 :
;: ;
}< =
public 
DbSet 
< 
Flight 
> 
Flights $
{% &
get' *
;* +
private, 3
set4 7
;7 8
}9 :
public 
DbSet 
< 
	Passenger 
> 

Passengers  *
{+ ,
get- 0
;0 1
private2 9
set: =
;= >
}? @
public 
DbSet 
< 
Person 
> 
People #
{$ %
get& )
;) *
private+ 2
set3 6
;6 7
}8 9
public 
DatabaseContext 
( 
DbContextOptions /
</ 0
DatabaseContext0 ?
>? @
optionsA H
)H I
:J K
baseL P
(P Q
optionsQ X
)X Y
{ 	
} 	
} 
} ˚
yC:\Users\leahu\Desktop\FlightManagement\FlightManagement.Infrastructure\Generics\GenericRepositories\AddressRepository.cs
	namespace 	
FlightManagement
 
. 
Infrastructure )
.) *
Generics* 2
.2 3
GenericRepositories3 F
{ 
public 

class 
AddressRepository "
:# $

Repository% /
</ 0
Address0 7
>7 8
{ 
public 
AddressRepository  
(  !
DatabaseContext! 0
context1 8
)8 9
:: ;
base< @
(@ A
contextA H
)H I
{ 	
}		 	
}

 
} ì
C:\Users\leahu\Desktop\FlightManagement\FlightManagement.Infrastructure\Generics\GenericRepositories\AdministratorRepository.cs
	namespace 	
FlightManagement
 
. 
Infrastructure )
.) *
Generics* 2
.2 3
GenericRepositories3 F
{ 
public 

class #
AdministratorRepository (
:) *

Repository+ 5
<5 6
Administrator6 C
>C D
{ 
public #
AdministratorRepository &
(& '
DatabaseContext' 6
context7 >
)> ?
:@ A
baseB F
(F G
contextG N
)N O
{ 	
}		 	
}

 
} ù
yC:\Users\leahu\Desktop\FlightManagement\FlightManagement.Infrastructure\Generics\GenericRepositories\AirportRepository.cs
	namespace 	
FlightManagement
 
. 
Infrastructure )
.) *
Generics* 2
.2 3
GenericRepositories3 F
{ 
public 

class 
AirportRepository "
:# $

Repository% /
</ 0
Airport0 7
>7 8
{ 
public 
AirportRepository  
(  !
DatabaseContext! 0
context1 8
)8 9
:: ;
base< @
(@ A
contextA H
)H I
{		 	
}

 	
public 
override 
Airport 
Get  #
(# $
Guid$ (
id) +
)+ ,
{ 	
return 
Context 
. 
Airports #
.# $
Include$ +
(+ ,
airport, 3
=>4 6
airport7 >
.> ?
Address? F
)F G
. 
Where 
( 
a 
=> 
a 
. 
Id  
==! #
id$ &
)& '
. 
FirstOrDefault 
(  
)  !
;! "
} 	
public 
override 
IEnumerable #
<# $
Airport$ +
>+ ,
All- 0
(0 1
)1 2
{ 	
return 
Context 
. 
Airports #
.# $
Include$ +
(+ ,
airport, 3
=>4 6
airport7 >
.> ?
Address? F
)F G
.G H
ToListH N
(N O
)O P
;P Q
} 	
} 
} ˚
yC:\Users\leahu\Desktop\FlightManagement\FlightManagement.Infrastructure\Generics\GenericRepositories\AllergyRepository.cs
	namespace 	
FlightManagement
 
. 
Infrastructure )
.) *
Generics* 2
.2 3
GenericRepositories3 F
{ 
public 

class 
AllergyRepository "
:# $

Repository% /
</ 0
Allergy0 7
>7 8
{ 
public 
AllergyRepository  
(  !
DatabaseContext! 0
context1 8
)8 9
:: ;
base< @
(@ A
contextA H
)H I
{ 	
}		 	
}

 
} —
yC:\Users\leahu\Desktop\FlightManagement\FlightManagement.Infrastructure\Generics\GenericRepositories\BaggageRepository.cs
	namespace 	
FlightManagement
 
. 
Infrastructure )
.) *
Generics* 2
.2 3
GenericRepositories3 F
{ 
public 

class 
BaggageRepository "
:# $

Repository% /
</ 0
Baggage0 7
>7 8
{ 
public 
BaggageRepository  
(  !
DatabaseContext! 0
context1 8
)8 9
:: ;
base< @
(@ A
contextA H
)H I
{		 	
}

 	
public 
override 
Baggage 
Get  #
(# $
Guid$ (
id) +
)+ ,
{ 	
return 
Context 
. 
Baggages #
.# $
Include$ +
(+ ,
b, -
=>. 0
b1 2
.2 3
	Passenger3 <
)< =
.= >
ThenInclude> I
(I J
pJ K
=>L N
pO P
.P Q
PersonQ W
)W X
. 
IgnoreAutoIncludes #
(# $
)$ %
. 
Where 
( 
b 
=> 
b 
. 
Id  
==! #
id$ &
)& '
. 
FirstOrDefault 
(  
)  !
;! "
} 	
public 
override 
IEnumerable #
<# $
Baggage$ +
>+ ,
All- 0
(0 1
)1 2
{ 	
return 
Context 
. 
Baggages #
.# $
Include$ +
(+ ,
b, -
=>. 0
b1 2
.2 3
	Passenger3 <
)< =
.= >
ThenInclude> I
(I J
pJ K
=>L N
pO P
.P Q
PersonQ W
)W X
. 
IgnoreAutoIncludes #
(# $
)$ %
.% &
ToList& ,
(, -
)- .
;. /
} 	
} 
} ˚
yC:\Users\leahu\Desktop\FlightManagement\FlightManagement.Infrastructure\Generics\GenericRepositories\CompanyRepository.cs
	namespace 	
FlightManagement
 
. 
Infrastructure )
.) *
Generics* 2
.2 3
GenericRepositories3 F
{ 
public 

class 
CompanyRepository "
:# $

Repository% /
</ 0
Company0 7
>7 8
{ 
public 
CompanyRepository  
(  !
DatabaseContext! 0
context1 8
)8 9
:: ;
base< @
(@ A
contextA H
)H I
{ 	
}		 	
}

 
} ç!
xC:\Users\leahu\Desktop\FlightManagement\FlightManagement.Infrastructure\Generics\GenericRepositories\FlightRepository.cs
	namespace 	
FlightManagement
 
. 
Infrastructure )
.) *
Generics* 2
.2 3
GenericRepositories3 F
{ 
public 

class 
FlightRepository !
:" #

Repository$ .
<. /
Flight/ 5
>5 6
{ 
public 
FlightRepository 
(  
DatabaseContext  /
context0 7
)7 8
:9 :
base; ?
(? @
context@ G
)G H
{		 	
}

 	
public 
override 
Flight 
Get "
(" #
Guid# '
id( *
)* +
{ 	
return 
Context 
. 
Flights "
. 
Include 
( 
f 
=> 
f 
.  

Passengers  *
)* +
.+ ,
ThenInclude, 7
(7 8
p8 9
=>: <
p= >
.> ?
Person? E
)E F
. 
Include 
( 
f 
=> 
f 
.  

Passengers  *
)* +
.+ ,
ThenInclude, 7
(7 8
p8 9
=>: <
p= >
.> ?
Baggages? G
)G H
. 
Include 
( 
f 
=> 
f 
.  
DepartureAirport  0
)0 1
.1 2
ThenInclude2 =
(= >
a> ?
=>@ B
aC D
.D E
AddressE L
)L M
. 
Include 
( 
f 
=> 
f 
.  
DestinationAirport  2
)2 3
.3 4
ThenInclude4 ?
(? @
a@ A
=>B D
aE F
.F G
AddressG N
)N O
. 
Include 
( 
f 
=> 
f 
.  
IntermediateStops  1
)1 2
.2 3
ThenInclude3 >
(> ?
a? @
=>A C
aD E
.E F
AddressF M
)M N
. 
Where 
( 
f 
=> 
f 
. 
Id  
==! #
id$ &
)& '
. 
FirstOrDefault 
(  
)  !
;! "
} 	
public 
override 
IEnumerable #
<# $
Flight$ *
>* +
All, /
(/ 0
)0 1
{ 	
return 
Context 
. 
Flights "
. 
Include 
( 
f 
=> 
f 
.  

Passengers  *
)* +
.+ ,
ThenInclude, 7
(7 8
p8 9
=>: <
p= >
.> ?
Person? E
)E F
. 
Include 
( 
f 
=> 
f 
.  
DepartureAirport  0
)0 1
. 
Include 
( 
f 
=> 
f 
.  
DestinationAirport  2
)2 3
.3 4
ThenInclude4 ?
(? @
a@ A
=>B D
aE F
.F G
AddressG N
)N O
. 
Include 
( 
f 
=> 
f 
.  
IntermediateStops  1
)1 2
.2 3
ThenInclude3 >
(> ?
a? @
=>A C
aD E
.E F
AddressF M
)M N
. 
ToList 
( 
) 
; 
}   	
}!! 
}"" è
{C:\Users\leahu\Desktop\FlightManagement\FlightManagement.Infrastructure\Generics\GenericRepositories\PassengerRepository.cs
	namespace 	
FlightManagement
 
. 
Infrastructure )
.) *
Generics* 2
.2 3
GenericRepositories3 F
{ 
public 

class 
PassengerRepository $
:% &

Repository' 1
<1 2
	Passenger2 ;
>; <
{ 
public 
PassengerRepository "
(" #
DatabaseContext# 2
context3 :
): ;
:< =
base> B
(B C
contextC J
)J K
{		 	
}

 	
public 
override 
	Passenger !
Get" %
(% &
Guid& *
id+ -
)- .
{ 	
return 
Context 
. 

Passengers %
.% &
Include& -
(- .
p. /
=>0 2
p3 4
.4 5
Person5 ;
); <
. 
Include 
( 
p 
=> 
p 
.  
Flight  &
)& '
. 
Include 
( 
p 
=> 
p 
.  
	Allergies  )
)) *
. 
Include 
( 
p 
=> 
p 
.  
Baggages  (
)( )
. 
Where 
( 
p 
=> 
p 
. 
Id  
==! #
id$ &
)& '
. 
FirstOrDefault 
(  
)  !
;! "
} 	
public 
override 
IEnumerable #
<# $
	Passenger$ -
>- .
All/ 2
(2 3
)3 4
{ 	
return 
Context 
. 

Passengers %
.% &
Include& -
(- .
p. /
=>0 2
p3 4
.4 5
Person5 ;
); <
. 
Include 
( 
p 
=> 
p 
.  
Flight  &
)& '
. 
Include 
( 
p 
=> 
p 
.  
	Allergies  )
)) *
. 
Include 
( 
p 
=> 
p 
.  
Baggages  (
)( )
. 
ToList 
( 
) 
; 
} 	
} 
} ˚
xC:\Users\leahu\Desktop\FlightManagement\FlightManagement.Infrastructure\Generics\GenericRepositories\PersonRepository.cs
	namespace 	
FlightManagement
 
. 
Infrastructure )
.) *
Generics* 2
.2 3
GenericRepositories3 F
{ 
public 

class 
PersonRepository !
:" #

Repository$ .
<. /
Person/ 5
>5 6
{ 
public 
PersonRepository 
(  
DatabaseContext  /
context0 7
)7 8
:9 :
base; ?
(? @
context@ G
)G H
{		 	
}

 	
public 
override 
Person 
Get "
(" #
Guid# '
id( *
)* +
{ 	
return 
Context 
. 
People !
. 
Include 
( 
p 
=> 
p 
.  
Address  '
)' (
. 
Where 
( 
p 
=> 
p 
. 
Id  
==! #
id$ &
)& '
. 
FirstOrDefault 
(  
)  !
;! "
} 	
public 
override 
IEnumerable #
<# $
Person$ *
>* +
All, /
(/ 0
)0 1
{ 	
return 
Context 
. 
People !
. 
Include 
( 
p 
=> 
p 
.  
Address  '
)' (
. 
ToList 
( 
) 
; 
} 	
} 
} ‚

_C:\Users\leahu\Desktop\FlightManagement\FlightManagement.Infrastructure\Generics\IRepository.cs
	namespace 	
FlightManagement
 
. 
Infrastructure )
.) *
Generics* 2
{ 
public 

	interface 
IRepository  
<  !
T! "
>" #
{ 
T 	
Add
 
( 
T 
entity 
) 
; 
T 	
Update
 
( 
T 
entity 
) 
; 
T		 	
Get		
 
(		 
Guid		 
id		 
)		 
;		 
IEnumerable

 
<

 
T

 
>

 
All

 
(

 
)

 
;

 
IEnumerable 
< 
T 
> 
Find 
( 

Expression &
<& '
Func' +
<+ ,
T, -
,- .
bool/ 3
>3 4
>4 5
	predicate6 ?
)? @
;@ A
void 
Delete 
( 
T 
Enity 
) 
; 
void 
SaveChanges 
( 
) 
; 
} 
} í
^C:\Users\leahu\Desktop\FlightManagement\FlightManagement.Infrastructure\Generics\Repository.cs
	namespace 	
FlightManagement
 
. 
Infrastructure )
.) *
Generics* 2
{ 
public 

abstract 
class 

Repository $
<$ %
T% &
>& '
:( )
IRepository* 5
<5 6
T6 7
>7 8
where9 >
T? @
:A B
classC H
{ 
	protected 
DatabaseContext !
Context" )
;) *
public		 

Repository		 
(		 
DatabaseContext		 )
context		* 1
)		1 2
{

 	
Context 
= 
context 
; 
} 	
public 
virtual 
T 
Add 
( 
T 
entity %
)% &
{ 	
return 
Context 
. 
Add 
( 
entity %
)% &
.& '
Entity' -
;- .
} 	
public 
virtual 
IEnumerable "
<" #
T# $
>$ %
Find& *
(* +

Expression+ 5
<5 6
Func6 :
<: ;
T; <
,< =
bool> B
>B C
>C D
	predicateE N
)N O
{ 	
return 
Context 
. 
Set 
< 
T  
>  !
(! "
)" #
.# $
AsQueryable$ /
(/ 0
)0 1
.1 2
Where2 7
(7 8
	predicate8 A
)A B
.B C
ToListC I
(I J
)J K
;K L
} 	
public 
virtual 
T 
Get 
( 
Guid !
id" $
)$ %
{ 	
return 
Context 
. 
Find 
<  
T  !
>! "
(" #
id# %
)% &
;& '
} 	
public 
virtual 
IEnumerable "
<" #
T# $
>$ %
All& )
() *
)* +
{ 	
return 
Context 
. 
Set 
< 
T  
>  !
(! "
)" #
.# $
ToList$ *
(* +
)+ ,
;, -
}   	
public"" 
virtual"" 
T"" 
Update"" 
(""  
T""  !
entity""" (
)""( )
{## 	
return$$ 
Context$$ 
.$$ 
Update$$ !
($$! "
entity$$" (
)$$( )
.$$) *
Entity$$* 0
;$$0 1
}%% 	
public'' 
virtual'' 
void'' 
Delete'' "
(''" #
T''# $
entity''% +
)''+ ,
{(( 	
Context)) 
.)) 
Remove)) 
()) 
entity)) !
)))! "
;))" #
}** 	
public,, 
void,, 
SaveChanges,, 
(,,  
),,  !
{-- 	
Context.. 
... 
SaveChanges.. 
(..  
)..  !
;..! "
}// 	
}00 
}11 áà
pC:\Users\leahu\Desktop\FlightManagement\FlightManagement.Infrastructure\Migrations\20221127155125_InitialStep.cs
	namespace 	
FlightManagement
 
. 
Infrastructure )
.) *

Migrations* 4
{ 
public		 

partial		 
class		 
InitialStep		 $
:		% &
	Migration		' 0
{

 
	protected 
override 
void 
Up  "
(" #
MigrationBuilder# 3
migrationBuilder4 D
)D E
{ 	
migrationBuilder 
. 
CreateTable (
(( )
name 
: 
$str !
,! "
columns 
: 
table 
=> !
new" %
{ 
Id 
= 
table 
. 
Column %
<% &
Guid& *
>* +
(+ ,
type, 0
:0 1
$str2 8
,8 9
nullable: B
:B C
falseD I
)I J
,J K
Number 
= 
table "
." #
Column# )
<) *
string* 0
>0 1
(1 2
type2 6
:6 7
$str8 >
,> ?
nullable@ H
:H I
falseJ O
)O P
,P Q
Street 
= 
table "
." #
Column# )
<) *
string* 0
>0 1
(1 2
type2 6
:6 7
$str8 >
,> ?
nullable@ H
:H I
falseJ O
)O P
,P Q
City 
= 
table  
.  !
Column! '
<' (
string( .
>. /
(/ 0
type0 4
:4 5
$str6 <
,< =
nullable> F
:F G
falseH M
)M N
,N O
Country 
= 
table #
.# $
Column$ *
<* +
string+ 1
>1 2
(2 3
type3 7
:7 8
$str9 ?
,? @
nullableA I
:I J
falseK P
)P Q
} 
, 
constraints 
: 
table "
=># %
{ 
table 
. 

PrimaryKey $
($ %
$str% 3
,3 4
x5 6
=>7 9
x: ;
.; <
Id< >
)> ?
;? @
} 
) 
; 
migrationBuilder 
. 
CreateTable (
(( )
name 
: 
$str !
,! "
columns 
: 
table 
=> !
new" %
{   
Id!! 
=!! 
table!! 
.!! 
Column!! %
<!!% &
Guid!!& *
>!!* +
(!!+ ,
type!!, 0
:!!0 1
$str!!2 8
,!!8 9
nullable!!: B
:!!B C
false!!D I
)!!I J
,!!J K
Name"" 
="" 
table""  
.""  !
Column""! '
<""' (
string""( .
>"". /
(""/ 0
type""0 4
:""4 5
$str""6 <
,""< =
nullable""> F
:""F G
false""H M
)""M N
,""N O
CreationDate##  
=##! "
table### (
.##( )
Column##) /
<##/ 0
DateTime##0 8
>##8 9
(##9 :
type##: >
:##> ?
$str##@ F
,##F G
nullable##H P
:##P Q
false##R W
)##W X
}$$ 
,$$ 
constraints%% 
:%% 
table%% "
=>%%# %
{&& 
table'' 
.'' 

PrimaryKey'' $
(''$ %
$str''% 3
,''3 4
x''5 6
=>''7 9
x'': ;
.''; <
Id''< >
)''> ?
;''? @
}(( 
)(( 
;(( 
migrationBuilder** 
.** 
CreateTable** (
(**( )
name++ 
:++ 
$str++ 
,++ 
columns,, 
:,, 
table,, 
=>,, !
new,," %
{-- 
Id.. 
=.. 
table.. 
... 
Column.. %
<..% &
Guid..& *
>..* +
(..+ ,
type.., 0
:..0 1
$str..2 8
,..8 9
nullable..: B
:..B C
false..D I
)..I J
,..J K
Name// 
=// 
table//  
.//  !
Column//! '
<//' (
string//( .
>//. /
(/// 0
type//0 4
://4 5
$str//6 <
,//< =
nullable//> F
://F G
false//H M
)//M N
,//N O
Surname00 
=00 
table00 #
.00# $
Column00$ *
<00* +
string00+ 1
>001 2
(002 3
type003 7
:007 8
$str009 ?
,00? @
nullable00A I
:00I J
false00K P
)00P Q
,00Q R
DateOfBirth11 
=11  !
table11" '
.11' (
Column11( .
<11. /
DateTime11/ 7
>117 8
(118 9
type119 =
:11= >
$str11? E
,11E F
nullable11G O
:11O P
false11Q V
)11V W
,11W X
Gender22 
=22 
table22 "
.22" #
Column22# )
<22) *
int22* -
>22- .
(22. /
type22/ 3
:223 4
$str225 >
,22> ?
nullable22@ H
:22H I
false22J O
)22O P
,22P Q
	AddressId33 
=33 
table33  %
.33% &
Column33& ,
<33, -
Guid33- 1
>331 2
(332 3
type333 7
:337 8
$str339 ?
,33? @
nullable33A I
:33I J
false33K P
)33P Q
}44 
,44 
constraints55 
:55 
table55 "
=>55# %
{66 
table77 
.77 

PrimaryKey77 $
(77$ %
$str77% 0
,770 1
x772 3
=>774 6
x777 8
.778 9
Id779 ;
)77; <
;77< =
table88 
.88 

ForeignKey88 $
(88$ %
name99 
:99 
$str99 =
,99= >
column:: 
::: 
x::  !
=>::" $
x::% &
.::& '
	AddressId::' 0
,::0 1
principalTable;; &
:;;& '
$str;;( 3
,;;3 4
principalColumn<< '
:<<' (
$str<<) -
,<<- .
onDelete==  
:==  !
ReferentialAction==" 3
.==3 4
Cascade==4 ;
)==; <
;==< =
}>> 
)>> 
;>> 
migrationBuilder@@ 
.@@ 
CreateTable@@ (
(@@( )
nameAA 
:AA 
$strAA &
,AA& '
columnsBB 
:BB 
tableBB 
=>BB !
newBB" %
{CC 
IdDD 
=DD 
tableDD 
.DD 
ColumnDD %
<DD% &
GuidDD& *
>DD* +
(DD+ ,
typeDD, 0
:DD0 1
$strDD2 8
,DD8 9
nullableDD: B
:DDB C
falseDDD I
)DDI J
,DDJ K
	CompanyIdEE 
=EE 
tableEE  %
.EE% &
ColumnEE& ,
<EE, -
GuidEE- 1
>EE1 2
(EE2 3
typeEE3 7
:EE7 8
$strEE9 ?
,EE? @
nullableEEA I
:EEI J
falseEEK P
)EEP Q
,EEQ R
PersonIdFF 
=FF 
tableFF $
.FF$ %
ColumnFF% +
<FF+ ,
GuidFF, 0
>FF0 1
(FF1 2
typeFF2 6
:FF6 7
$strFF8 >
,FF> ?
nullableFF@ H
:FFH I
falseFFJ O
)FFO P
}GG 
,GG 
constraintsHH 
:HH 
tableHH "
=>HH# %
{II 
tableJJ 
.JJ 

PrimaryKeyJJ $
(JJ$ %
$strJJ% 8
,JJ8 9
xJJ: ;
=>JJ< >
xJJ? @
.JJ@ A
IdJJA C
)JJC D
;JJD E
tableKK 
.KK 

ForeignKeyKK $
(KK$ %
nameLL 
:LL 
$strLL E
,LLE F
columnMM 
:MM 
xMM  !
=>MM" $
xMM% &
.MM& '
	CompanyIdMM' 0
,MM0 1
principalTableNN &
:NN& '
$strNN( 3
,NN3 4
principalColumnOO '
:OO' (
$strOO) -
,OO- .
onDeletePP  
:PP  !
ReferentialActionPP" 3
.PP3 4
CascadePP4 ;
)PP; <
;PP< =
tableQQ 
.QQ 

ForeignKeyQQ $
(QQ$ %
nameRR 
:RR 
$strRR A
,RRA B
columnSS 
:SS 
xSS  !
=>SS" $
xSS% &
.SS& '
PersonIdSS' /
,SS/ 0
principalTableTT &
:TT& '
$strTT( 0
,TT0 1
principalColumnUU '
:UU' (
$strUU) -
,UU- .
onDeleteVV  
:VV  !
ReferentialActionVV" 3
.VV3 4
CascadeVV4 ;
)VV; <
;VV< =
}WW 
)WW 
;WW 
migrationBuilderYY 
.YY 
CreateTableYY (
(YY( )
nameZZ 
:ZZ 
$strZZ  
,ZZ  !
columns[[ 
:[[ 
table[[ 
=>[[ !
new[[" %
{\\ 
Id]] 
=]] 
table]] 
.]] 
Column]] %
<]]% &
Guid]]& *
>]]* +
(]]+ ,
type]], 0
:]]0 1
$str]]2 8
,]]8 9
nullable]]: B
:]]B C
false]]D I
)]]I J
,]]J K
Name^^ 
=^^ 
table^^  
.^^  !
Column^^! '
<^^' (
string^^( .
>^^. /
(^^/ 0
type^^0 4
:^^4 5
$str^^6 <
,^^< =
nullable^^> F
:^^F G
false^^H M
)^^M N
,^^N O
	AddressId__ 
=__ 
table__  %
.__% &
Column__& ,
<__, -
Guid__- 1
>__1 2
(__2 3
type__3 7
:__7 8
$str__9 ?
,__? @
nullable__A I
:__I J
false__K P
)__P Q
,__Q R
City`` 
=`` 
table``  
.``  !
Column``! '
<``' (
string``( .
>``. /
(``/ 0
type``0 4
:``4 5
$str``6 <
,``< =
nullable``> F
:``F G
false``H M
)``M N
,``N O
FlightIdaa 
=aa 
tableaa $
.aa$ %
Columnaa% +
<aa+ ,
Guidaa, 0
>aa0 1
(aa1 2
typeaa2 6
:aa6 7
$straa8 >
,aa> ?
nullableaa@ H
:aaH I
trueaaJ N
)aaN O
}bb 
,bb 
constraintscc 
:cc 
tablecc "
=>cc# %
{dd 
tableee 
.ee 

PrimaryKeyee $
(ee$ %
$stree% 2
,ee2 3
xee4 5
=>ee6 8
xee9 :
.ee: ;
Idee; =
)ee= >
;ee> ?
tableff 
.ff 

ForeignKeyff $
(ff$ %
namegg 
:gg 
$strgg ?
,gg? @
columnhh 
:hh 
xhh  !
=>hh" $
xhh% &
.hh& '
	AddressIdhh' 0
,hh0 1
principalTableii &
:ii& '
$strii( 3
,ii3 4
principalColumnjj '
:jj' (
$strjj) -
,jj- .
onDeletekk  
:kk  !
ReferentialActionkk" 3
.kk3 4
Cascadekk4 ;
)kk; <
;kk< =
}ll 
)ll 
;ll 
migrationBuildernn 
.nn 
CreateTablenn (
(nn( )
nameoo 
:oo 
$stroo 
,oo  
columnspp 
:pp 
tablepp 
=>pp !
newpp" %
{qq 
Idrr 
=rr 
tablerr 
.rr 
Columnrr %
<rr% &
Guidrr& *
>rr* +
(rr+ ,
typerr, 0
:rr0 1
$strrr2 8
,rr8 9
nullablerr: B
:rrB C
falserrD I
)rrI J
,rrJ K
DepartureDatess !
=ss" #
tabless$ )
.ss) *
Columnss* 0
<ss0 1
DateTimess1 9
>ss9 :
(ss: ;
typess; ?
:ss? @
$strssA G
,ssG H
nullablessI Q
:ssQ R
falsessS X
)ssX Y
,ssY Z
ArrivalDatett 
=tt  !
tablett" '
.tt' (
Columntt( .
<tt. /
DateTimett/ 7
>tt7 8
(tt8 9
typett9 =
:tt= >
$strtt? E
,ttE F
nullablettG O
:ttO P
falsettQ V
)ttV W
,ttW X
PassengerCapacityuu %
=uu& '
tableuu( -
.uu- .
Columnuu. 4
<uu4 5
intuu5 8
>uu8 9
(uu9 :
typeuu: >
:uu> ?
$struu@ I
,uuI J
nullableuuK S
:uuS T
falseuuU Z
)uuZ [
,uu[ \!
BaggageWeightCapacityvv )
=vv* +
tablevv, 1
.vv1 2
Columnvv2 8
<vv8 9
doublevv9 ?
>vv? @
(vv@ A
typevvA E
:vvE F
$strvvG M
,vvM N
nullablevvO W
:vvW X
falsevvY ^
)vv^ _
,vv_ `
MaxWeightPerBaggageww '
=ww( )
tableww* /
.ww/ 0
Columnww0 6
<ww6 7
doubleww7 =
>ww= >
(ww> ?
typeww? C
:wwC D
$strwwE K
,wwK L
nullablewwM U
:wwU V
falsewwW \
)ww\ ]
,ww] ^(
MaxBaggageWeightPerPassengerxx 0
=xx1 2
tablexx3 8
.xx8 9
Columnxx9 ?
<xx? @
doublexx@ F
>xxF G
(xxG H
typexxH L
:xxL M
$strxxN T
,xxT U
nullablexxV ^
:xx^ _
falsexx` e
)xxe f
,xxf g
MaxBaggageWidthyy #
=yy$ %
tableyy& +
.yy+ ,
Columnyy, 2
<yy2 3
doubleyy3 9
>yy9 :
(yy: ;
typeyy; ?
:yy? @
$stryyA G
,yyG H
nullableyyI Q
:yyQ R
falseyyS X
)yyX Y
,yyY Z
MaxBaggageHeightzz $
=zz% &
tablezz' ,
.zz, -
Columnzz- 3
<zz3 4
doublezz4 :
>zz: ;
(zz; <
typezz< @
:zz@ A
$strzzB H
,zzH I
nullablezzJ R
:zzR S
falsezzT Y
)zzY Z
,zzZ [
MaxBaggageLength{{ $
={{% &
table{{' ,
.{{, -
Column{{- 3
<{{3 4
double{{4 :
>{{: ;
({{; <
type{{< @
:{{@ A
$str{{B H
,{{H I
nullable{{J R
:{{R S
false{{T Y
){{Y Z
,{{Z [
DepartureAirportId|| &
=||' (
table||) .
.||. /
Column||/ 5
<||5 6
Guid||6 :
>||: ;
(||; <
type||< @
:||@ A
$str||B H
,||H I
nullable||J R
:||R S
false||T Y
)||Y Z
,||Z [ 
DestinationAirportId}} (
=}}) *
table}}+ 0
.}}0 1
Column}}1 7
<}}7 8
Guid}}8 <
>}}< =
(}}= >
type}}> B
:}}B C
$str}}D J
,}}J K
nullable}}L T
:}}T U
false}}V [
)}}[ \
}~~ 
,~~ 
constraints 
: 
table "
=># %
{
ÄÄ 
table
ÅÅ 
.
ÅÅ 

PrimaryKey
ÅÅ $
(
ÅÅ$ %
$str
ÅÅ% 1
,
ÅÅ1 2
x
ÅÅ3 4
=>
ÅÅ5 7
x
ÅÅ8 9
.
ÅÅ9 :
Id
ÅÅ: <
)
ÅÅ< =
;
ÅÅ= >
table
ÇÇ 
.
ÇÇ 

ForeignKey
ÇÇ $
(
ÇÇ$ %
name
ÉÉ 
:
ÉÉ 
$str
ÉÉ F
,
ÉÉF G
column
ÑÑ 
:
ÑÑ 
x
ÑÑ  !
=>
ÑÑ" $
x
ÑÑ% &
.
ÑÑ& ' 
DepartureAirportId
ÑÑ' 9
,
ÑÑ9 :
principalTable
ÖÖ &
:
ÖÖ& '
$str
ÖÖ( 2
,
ÖÖ2 3
principalColumn
ÜÜ '
:
ÜÜ' (
$str
ÜÜ) -
,
ÜÜ- .
onDelete
áá  
:
áá  !
ReferentialAction
áá" 3
.
áá3 4
Cascade
áá4 ;
)
áá; <
;
áá< =
table
àà 
.
àà 

ForeignKey
àà $
(
àà$ %
name
ââ 
:
ââ 
$str
ââ H
,
ââH I
column
ää 
:
ää 
x
ää  !
=>
ää" $
x
ää% &
.
ää& '"
DestinationAirportId
ää' ;
,
ää; <
principalTable
ãã &
:
ãã& '
$str
ãã( 2
,
ãã2 3
principalColumn
åå '
:
åå' (
$str
åå) -
,
åå- .
onDelete
çç  
:
çç  !
ReferentialAction
çç" 3
.
çç3 4
Cascade
çç4 ;
)
çç; <
;
çç< =
}
éé 
)
éé 
;
éé 
migrationBuilder
êê 
.
êê 
CreateTable
êê (
(
êê( )
name
ëë 
:
ëë 
$str
ëë "
,
ëë" #
columns
íí 
:
íí 
table
íí 
=>
íí !
new
íí" %
{
ìì 
Id
îî 
=
îî 
table
îî 
.
îî 
Column
îî %
<
îî% &
Guid
îî& *
>
îî* +
(
îî+ ,
type
îî, 0
:
îî0 1
$str
îî2 8
,
îî8 9
nullable
îî: B
:
îîB C
false
îîD I
)
îîI J
,
îîJ K
PersonId
ïï 
=
ïï 
table
ïï $
.
ïï$ %
Column
ïï% +
<
ïï+ ,
Guid
ïï, 0
>
ïï0 1
(
ïï1 2
type
ïï2 6
:
ïï6 7
$str
ïï8 >
,
ïï> ?
nullable
ïï@ H
:
ïïH I
false
ïïJ O
)
ïïO P
,
ïïP Q
FlightId
ññ 
=
ññ 
table
ññ $
.
ññ$ %
Column
ññ% +
<
ññ+ ,
Guid
ññ, 0
>
ññ0 1
(
ññ1 2
type
ññ2 6
:
ññ6 7
$str
ññ8 >
,
ññ> ?
nullable
ññ@ H
:
ññH I
false
ññJ O
)
ññO P
,
ññP Q
Weight
óó 
=
óó 
table
óó "
.
óó" #
Column
óó# )
<
óó) *
double
óó* 0
>
óó0 1
(
óó1 2
type
óó2 6
:
óó6 7
$str
óó8 >
,
óó> ?
nullable
óó@ H
:
óóH I
false
óóJ O
)
óóO P
}
òò 
,
òò 
constraints
ôô 
:
ôô 
table
ôô "
=>
ôô# %
{
öö 
table
õõ 
.
õõ 

PrimaryKey
õõ $
(
õõ$ %
$str
õõ% 4
,
õõ4 5
x
õõ6 7
=>
õõ8 :
x
õõ; <
.
õõ< =
Id
õõ= ?
)
õõ? @
;
õõ@ A
table
úú 
.
úú 

ForeignKey
úú $
(
úú$ %
name
ùù 
:
ùù 
$str
ùù >
,
ùù> ?
column
ûû 
:
ûû 
x
ûû  !
=>
ûû" $
x
ûû% &
.
ûû& '
FlightId
ûû' /
,
ûû/ 0
principalTable
üü &
:
üü& '
$str
üü( 1
,
üü1 2
principalColumn
†† '
:
††' (
$str
††) -
,
††- .
onDelete
°°  
:
°°  !
ReferentialAction
°°" 3
.
°°3 4
Cascade
°°4 ;
)
°°; <
;
°°< =
table
¢¢ 
.
¢¢ 

ForeignKey
¢¢ $
(
¢¢$ %
name
££ 
:
££ 
$str
££ =
,
££= >
column
§§ 
:
§§ 
x
§§  !
=>
§§" $
x
§§% &
.
§§& '
PersonId
§§' /
,
§§/ 0
principalTable
•• &
:
••& '
$str
••( 0
,
••0 1
principalColumn
¶¶ '
:
¶¶' (
$str
¶¶) -
,
¶¶- .
onDelete
ßß  
:
ßß  !
ReferentialAction
ßß" 3
.
ßß3 4
Cascade
ßß4 ;
)
ßß; <
;
ßß< =
}
®® 
)
®® 
;
®® 
migrationBuilder
™™ 
.
™™ 
CreateTable
™™ (
(
™™( )
name
´´ 
:
´´ 
$str
´´ !
,
´´! "
columns
¨¨ 
:
¨¨ 
table
¨¨ 
=>
¨¨ !
new
¨¨" %
{
≠≠ 
Id
ÆÆ 
=
ÆÆ 
table
ÆÆ 
.
ÆÆ 
Column
ÆÆ %
<
ÆÆ% &
Guid
ÆÆ& *
>
ÆÆ* +
(
ÆÆ+ ,
type
ÆÆ, 0
:
ÆÆ0 1
$str
ÆÆ2 8
,
ÆÆ8 9
nullable
ÆÆ: B
:
ÆÆB C
false
ÆÆD I
)
ÆÆI J
,
ÆÆJ K
Name
ØØ 
=
ØØ 
table
ØØ  
.
ØØ  !
Column
ØØ! '
<
ØØ' (
string
ØØ( .
>
ØØ. /
(
ØØ/ 0
type
ØØ0 4
:
ØØ4 5
$str
ØØ6 <
,
ØØ< =
nullable
ØØ> F
:
ØØF G
false
ØØH M
)
ØØM N
,
ØØN O
PassengerId
∞∞ 
=
∞∞  !
table
∞∞" '
.
∞∞' (
Column
∞∞( .
<
∞∞. /
Guid
∞∞/ 3
>
∞∞3 4
(
∞∞4 5
type
∞∞5 9
:
∞∞9 :
$str
∞∞; A
,
∞∞A B
nullable
∞∞C K
:
∞∞K L
true
∞∞M Q
)
∞∞Q R
}
±± 
,
±± 
constraints
≤≤ 
:
≤≤ 
table
≤≤ "
=>
≤≤# %
{
≥≥ 
table
¥¥ 
.
¥¥ 

PrimaryKey
¥¥ $
(
¥¥$ %
$str
¥¥% 3
,
¥¥3 4
x
¥¥5 6
=>
¥¥7 9
x
¥¥: ;
.
¥¥; <
Id
¥¥< >
)
¥¥> ?
;
¥¥? @
table
µµ 
.
µµ 

ForeignKey
µµ $
(
µµ$ %
name
∂∂ 
:
∂∂ 
$str
∂∂ C
,
∂∂C D
column
∑∑ 
:
∑∑ 
x
∑∑  !
=>
∑∑" $
x
∑∑% &
.
∑∑& '
PassengerId
∑∑' 2
,
∑∑2 3
principalTable
∏∏ &
:
∏∏& '
$str
∏∏( 4
,
∏∏4 5
principalColumn
ππ '
:
ππ' (
$str
ππ) -
)
ππ- .
;
ππ. /
}
∫∫ 
)
∫∫ 
;
∫∫ 
migrationBuilder
ºº 
.
ºº 
CreateTable
ºº (
(
ºº( )
name
ΩΩ 
:
ΩΩ 
$str
ΩΩ  
,
ΩΩ  !
columns
ææ 
:
ææ 
table
ææ 
=>
ææ !
new
ææ" %
{
øø 
Id
¿¿ 
=
¿¿ 
table
¿¿ 
.
¿¿ 
Column
¿¿ %
<
¿¿% &
Guid
¿¿& *
>
¿¿* +
(
¿¿+ ,
type
¿¿, 0
:
¿¿0 1
$str
¿¿2 8
,
¿¿8 9
nullable
¿¿: B
:
¿¿B C
false
¿¿D I
)
¿¿I J
,
¿¿J K
PassengerId
¡¡ 
=
¡¡  !
table
¡¡" '
.
¡¡' (
Column
¡¡( .
<
¡¡. /
Guid
¡¡/ 3
>
¡¡3 4
(
¡¡4 5
type
¡¡5 9
:
¡¡9 :
$str
¡¡; A
,
¡¡A B
nullable
¡¡C K
:
¡¡K L
false
¡¡M R
)
¡¡R S
,
¡¡S T
Weight
¬¬ 
=
¬¬ 
table
¬¬ "
.
¬¬" #
Column
¬¬# )
<
¬¬) *
double
¬¬* 0
>
¬¬0 1
(
¬¬1 2
type
¬¬2 6
:
¬¬6 7
$str
¬¬8 >
,
¬¬> ?
nullable
¬¬@ H
:
¬¬H I
false
¬¬J O
)
¬¬O P
,
¬¬P Q
Width
√√ 
=
√√ 
table
√√ !
.
√√! "
Column
√√" (
<
√√( )
double
√√) /
>
√√/ 0
(
√√0 1
type
√√1 5
:
√√5 6
$str
√√7 =
,
√√= >
nullable
√√? G
:
√√G H
false
√√I N
)
√√N O
,
√√O P
Height
ƒƒ 
=
ƒƒ 
table
ƒƒ "
.
ƒƒ" #
Column
ƒƒ# )
<
ƒƒ) *
double
ƒƒ* 0
>
ƒƒ0 1
(
ƒƒ1 2
type
ƒƒ2 6
:
ƒƒ6 7
$str
ƒƒ8 >
,
ƒƒ> ?
nullable
ƒƒ@ H
:
ƒƒH I
false
ƒƒJ O
)
ƒƒO P
,
ƒƒP Q
Length
≈≈ 
=
≈≈ 
table
≈≈ "
.
≈≈" #
Column
≈≈# )
<
≈≈) *
double
≈≈* 0
>
≈≈0 1
(
≈≈1 2
type
≈≈2 6
:
≈≈6 7
$str
≈≈8 >
,
≈≈> ?
nullable
≈≈@ H
:
≈≈H I
false
≈≈J O
)
≈≈O P
}
∆∆ 
,
∆∆ 
constraints
«« 
:
«« 
table
«« "
=>
««# %
{
»» 
table
…… 
.
…… 

PrimaryKey
…… $
(
……$ %
$str
……% 2
,
……2 3
x
……4 5
=>
……6 8
x
……9 :
.
……: ;
Id
……; =
)
……= >
;
……> ?
table
   
.
   

ForeignKey
   $
(
  $ %
name
ÀÀ 
:
ÀÀ 
$str
ÀÀ B
,
ÀÀB C
column
ÃÃ 
:
ÃÃ 
x
ÃÃ  !
=>
ÃÃ" $
x
ÃÃ% &
.
ÃÃ& '
PassengerId
ÃÃ' 2
,
ÃÃ2 3
principalTable
ÕÕ &
:
ÕÕ& '
$str
ÕÕ( 4
,
ÕÕ4 5
principalColumn
ŒŒ '
:
ŒŒ' (
$str
ŒŒ) -
,
ŒŒ- .
onDelete
œœ  
:
œœ  !
ReferentialAction
œœ" 3
.
œœ3 4
Cascade
œœ4 ;
)
œœ; <
;
œœ< =
}
–– 
)
–– 
;
–– 
migrationBuilder
““ 
.
““ 
CreateIndex
““ (
(
““( )
name
”” 
:
”” 
$str
”” 3
,
””3 4
table
‘‘ 
:
‘‘ 
$str
‘‘ '
,
‘‘' (
column
’’ 
:
’’ 
$str
’’ #
)
’’# $
;
’’$ %
migrationBuilder
◊◊ 
.
◊◊ 
CreateIndex
◊◊ (
(
◊◊( )
name
ÿÿ 
:
ÿÿ 
$str
ÿÿ 2
,
ÿÿ2 3
table
ŸŸ 
:
ŸŸ 
$str
ŸŸ '
,
ŸŸ' (
column
⁄⁄ 
:
⁄⁄ 
$str
⁄⁄ "
)
⁄⁄" #
;
⁄⁄# $
migrationBuilder
‹‹ 
.
‹‹ 
CreateIndex
‹‹ (
(
‹‹( )
name
›› 
:
›› 
$str
›› -
,
››- .
table
ﬁﬁ 
:
ﬁﬁ 
$str
ﬁﬁ !
,
ﬁﬁ! "
column
ﬂﬂ 
:
ﬂﬂ 
$str
ﬂﬂ #
)
ﬂﬂ# $
;
ﬂﬂ$ %
migrationBuilder
·· 
.
·· 
CreateIndex
·· (
(
··( )
name
‚‚ 
:
‚‚ 
$str
‚‚ ,
,
‚‚, -
table
„„ 
:
„„ 
$str
„„ !
,
„„! "
column
‰‰ 
:
‰‰ 
$str
‰‰ "
)
‰‰" #
;
‰‰# $
migrationBuilder
ÊÊ 
.
ÊÊ 
CreateIndex
ÊÊ (
(
ÊÊ( )
name
ÁÁ 
:
ÁÁ 
$str
ÁÁ 0
,
ÁÁ0 1
table
ËË 
:
ËË 
$str
ËË "
,
ËË" #
column
ÈÈ 
:
ÈÈ 
$str
ÈÈ %
)
ÈÈ% &
;
ÈÈ& '
migrationBuilder
ÎÎ 
.
ÎÎ 
CreateIndex
ÎÎ (
(
ÎÎ( )
name
ÏÏ 
:
ÏÏ 
$str
ÏÏ /
,
ÏÏ/ 0
table
ÌÌ 
:
ÌÌ 
$str
ÌÌ !
,
ÌÌ! "
column
ÓÓ 
:
ÓÓ 
$str
ÓÓ %
)
ÓÓ% &
;
ÓÓ& '
migrationBuilder
 
.
 
CreateIndex
 (
(
( )
name
ÒÒ 
:
ÒÒ 
$str
ÒÒ 5
,
ÒÒ5 6
table
ÚÚ 
:
ÚÚ 
$str
ÚÚ  
,
ÚÚ  !
column
ÛÛ 
:
ÛÛ 
$str
ÛÛ ,
)
ÛÛ, -
;
ÛÛ- .
migrationBuilder
ıı 
.
ıı 
CreateIndex
ıı (
(
ıı( )
name
ˆˆ 
:
ˆˆ 
$str
ˆˆ 7
,
ˆˆ7 8
table
˜˜ 
:
˜˜ 
$str
˜˜  
,
˜˜  !
column
¯¯ 
:
¯¯ 
$str
¯¯ .
)
¯¯. /
;
¯¯/ 0
migrationBuilder
˙˙ 
.
˙˙ 
CreateIndex
˙˙ (
(
˙˙( )
name
˚˚ 
:
˚˚ 
$str
˚˚ .
,
˚˚. /
table
¸¸ 
:
¸¸ 
$str
¸¸ #
,
¸¸# $
column
˝˝ 
:
˝˝ 
$str
˝˝ "
)
˝˝" #
;
˝˝# $
migrationBuilder
ˇˇ 
.
ˇˇ 
CreateIndex
ˇˇ (
(
ˇˇ( )
name
ÄÄ 
:
ÄÄ 
$str
ÄÄ .
,
ÄÄ. /
table
ÅÅ 
:
ÅÅ 
$str
ÅÅ #
,
ÅÅ# $
column
ÇÇ 
:
ÇÇ 
$str
ÇÇ "
)
ÇÇ" #
;
ÇÇ# $
migrationBuilder
ÑÑ 
.
ÑÑ 
CreateIndex
ÑÑ (
(
ÑÑ( )
name
ÖÖ 
:
ÖÖ 
$str
ÖÖ +
,
ÖÖ+ ,
table
ÜÜ 
:
ÜÜ 
$str
ÜÜ 
,
ÜÜ  
column
áá 
:
áá 
$str
áá #
)
áá# $
;
áá$ %
migrationBuilder
ââ 
.
ââ 
AddForeignKey
ââ *
(
ââ* +
name
ää 
:
ää 
$str
ää 4
,
ää4 5
table
ãã 
:
ãã 
$str
ãã !
,
ãã! "
column
åå 
:
åå 
$str
åå "
,
åå" #
principalTable
çç 
:
çç 
$str
çç  )
,
çç) *
principalColumn
éé 
:
éé  
$str
éé! %
)
éé% &
;
éé& '
}
èè 	
	protected
íí 
override
íí 
void
íí 
Down
íí  $
(
íí$ %
MigrationBuilder
íí% 5
migrationBuilder
íí6 F
)
ííF G
{
ìì 	
migrationBuilder
îî 
.
îî 
DropForeignKey
îî +
(
îî+ ,
name
ïï 
:
ïï 
$str
ïï 7
,
ïï7 8
table
ññ 
:
ññ 
$str
ññ !
)
ññ! "
;
ññ" #
migrationBuilder
òò 
.
òò 
DropForeignKey
òò +
(
òò+ ,
name
ôô 
:
ôô 
$str
ôô 4
,
ôô4 5
table
öö 
:
öö 
$str
öö !
)
öö! "
;
öö" #
migrationBuilder
úú 
.
úú 
	DropTable
úú &
(
úú& '
name
ùù 
:
ùù 
$str
ùù &
)
ùù& '
;
ùù' (
migrationBuilder
üü 
.
üü 
	DropTable
üü &
(
üü& '
name
†† 
:
†† 
$str
†† !
)
††! "
;
††" #
migrationBuilder
¢¢ 
.
¢¢ 
	DropTable
¢¢ &
(
¢¢& '
name
££ 
:
££ 
$str
££  
)
££  !
;
££! "
migrationBuilder
•• 
.
•• 
	DropTable
•• &
(
••& '
name
¶¶ 
:
¶¶ 
$str
¶¶ !
)
¶¶! "
;
¶¶" #
migrationBuilder
®® 
.
®® 
	DropTable
®® &
(
®®& '
name
©© 
:
©© 
$str
©© "
)
©©" #
;
©©# $
migrationBuilder
´´ 
.
´´ 
	DropTable
´´ &
(
´´& '
name
¨¨ 
:
¨¨ 
$str
¨¨ 
)
¨¨ 
;
¨¨  
migrationBuilder
ÆÆ 
.
ÆÆ 
	DropTable
ÆÆ &
(
ÆÆ& '
name
ØØ 
:
ØØ 
$str
ØØ !
)
ØØ! "
;
ØØ" #
migrationBuilder
±± 
.
±± 
	DropTable
±± &
(
±±& '
name
≤≤ 
:
≤≤ 
$str
≤≤ 
)
≤≤  
;
≤≤  !
migrationBuilder
¥¥ 
.
¥¥ 
	DropTable
¥¥ &
(
¥¥& '
name
µµ 
:
µµ 
$str
µµ  
)
µµ  !
;
µµ! "
}
∂∂ 	
}
∑∑ 
}∏∏ 
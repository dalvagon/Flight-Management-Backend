// <auto-generated />
using System;
using FlightManagement.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FlightManagement.Infrastructure.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    partial class DatabaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.0");

            modelBuilder.Entity("FlightManagement.Business.Entities.Company", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Companies");

                    b.HasData(
                        new
                        {
                            Id = new Guid("031c70cc-18f6-442e-a7e1-2c61124705c2"),
                            CreationDate = new DateTime(1999, 5, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Atlas"
                        });
                });

            modelBuilder.Entity("FlightManagement.Business.Entities.Person", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("TEXT");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Gender")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("People");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Person");

                    b.UseTphMappingStrategy();

                    b.HasData(
                        new
                        {
                            Id = new Guid("9fcf25d8-04d2-4d7f-85b7-66cded3cd324"),
                            DateOfBirth = new DateTime(2002, 6, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Gender = 0,
                            Name = "Leahu",
                            Surname = "Vlad"
                        },
                        new
                        {
                            Id = new Guid("405794bf-d6ca-4510-bedb-f8beee78d903"),
                            DateOfBirth = new DateTime(1985, 4, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Gender = 0,
                            Name = "Ion",
                            Surname = "Titi"
                        });
                });

            modelBuilder.Entity("FlightManagement.Business.Entities.Administrator", b =>
                {
                    b.HasBaseType("FlightManagement.Business.Entities.Person");

                    b.Property<Guid>("CompanyId")
                        .HasColumnType("TEXT");

                    b.HasIndex("CompanyId");

                    b.HasDiscriminator().HasValue("Administrator");
                });

            modelBuilder.Entity("FlightManagement.Business.Entities.Administrator", b =>
                {
                    b.HasOne("FlightManagement.Business.Entities.Company", null)
                        .WithMany("Administrators")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FlightManagement.Business.Entities.Company", b =>
                {
                    b.Navigation("Administrators");
                });
#pragma warning restore 612, 618
        }
    }
}
